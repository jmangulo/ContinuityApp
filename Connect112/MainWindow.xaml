<Window x:Class="Connect112.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:Connect112"
        mc:Ignorable="d"
        Title="Connect 112 Application"
        Height="500"
        Width="400"
        MinWidth="350"
        MaxWidth="700">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding OnClosingApplicationEvent}"
                                   PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <local:EqualityConverter x:Key="EqualityConverter" />
        <Style TargetType="Button"
               x:Key="RoundButton">
            <Setter Property="Width"
                    Value="100" />
            <Setter Property="Height"
                    Value="100" />
            <Setter Property="Background"
                    Value="#FF30F195" />
            <Setter Property="Foreground"
                    Value="Black" />
            <Setter Property="FontWeight"
                    Value="Bold" />
            <Setter Property="FontSize"
                    Value="16" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="50"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Opacity"
                            Value="0.7" />
                    <Setter Property="BorderBrush"
                            Value="Blue" />
                </Trigger>
                <Trigger Property="IsMouseCaptureWithin"
                         Value="True">
                    <Setter Property="Opacity"
                            Value="0.85" />
                    <Setter Property="BorderBrush"
                            Value="Blue" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <TextBlock Text="{Binding TestStateHeader}"
                   HorizontalAlignment="Stretch"
                   TextAlignment="Center"
                   VerticalAlignment="Center"
                   Foreground="{Binding TestHeaderForegroundBrush}"
                   Background="{Binding TestHeaderBackgroundBrush}"
                   FontSize="16" />
        <Grid Margin="20"
              Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="150" />
            </Grid.ColumnDefinitions>
            <DataGrid x:Name="PinDataGrid"
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      Background="Transparent"
                      SelectedItem="{Binding TestConnection.SelectedPin}"
                      ItemsSource="{Binding TestConnection.Pins}">
                <DataGrid.Resources>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="DataGridCell.IsSelected"
                                     Value="True">
                                <Setter Property="Opacity"
                                        Value="0.8" />
                                <Setter Property="Background"
                                        Value="Transparent" />
                                <Setter Property="Foreground"
                                        Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=DataGridRow}}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Resources>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SelectionChangedEvent}"
                                               CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewKeyDown">
                        <i:InvokeCommandAction Command="{Binding PreviewKeyDownEvent}"
                                               PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background"
                                Value="{Binding RowBackground}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding PinResult}"
                                         Value="1">
                                <Setter Property="Background"
                                        Value="LightGreen" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding PinResult}"
                                         Value="2">
                                <Setter Property="Background"
                                        Value="Red" />
                                <Setter Property="Foreground"
                                        Value="White" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Pin"
                                        Width="*"
                                        IsReadOnly="True"
                                        CanUserSort="False"
                                        Binding="{Binding PinName}" />
                    <DataGridTextColumn Header="Result"
                                        Width="*"
                                        IsReadOnly="True"
                                        CanUserSort="False"
                                        Binding="{Binding PinResult}" />
                </DataGrid.Columns>
            </DataGrid>
            <!--Row 1 Column 2 : Connect button-->
            <Grid x:Name="gridConnect"
                  Grid.Column="1"
                  Margin="20 0 0 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDeviceFound}"
                                         Value="True">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Button Grid.Column="1"
                        Content="Find Device"
                        Height="30"
                        Command="{Binding ConnectButton}" />
            </Grid>
            <!--Row 1 Column 2 : Test buttons-->
            <Grid Grid.Column="1"
                  Margin="20 0 0 0">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility"
                                Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=gridConnect, Path=Visibility}"
                                         Value="Collapsed">
                                <Setter Property="Visibility"
                                        Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <StackPanel>
                    <TextBox x:Name="textBoxTestName"
                             Height="25"
                             Padding="2"
                             Text="{Binding TestConnection.TestName}" />
                    <TextBlock Text="Test Name"
                               FontSize="11"
                               HorizontalAlignment="Right" />
                </StackPanel>
                <Grid Grid.Row="1"
                      Margin="0 10 0 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <RadioButton x:Name="radioButtonManual"
                                 Content="Manual"
                                 GroupName="AutoGroup"
                                 IsChecked="{Binding SelectedAutoOption, Converter={StaticResource EqualityConverter}, ConverterParameter=Manual}" />
                    <RadioButton x:Name="radioButtonAuto"
                                 Grid.Column="1"
                                 Content="Auto"
                                 GroupName="AutoGroup"
                                 IsChecked="{Binding SelectedAutoOption, Converter={StaticResource EqualityConverter}, ConverterParameter=Auto}" />
                </Grid>
                <StackPanel Grid.Row="2"
                            Margin="0 10 0 0">
                    <Button Content="Start test"
                            Height="30"
                            Command="{Binding StartTestButton}">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=textBoxTestName, Path=Text}"
                                                 Value="">
                                        <Setter Property="IsEnabled"
                                                Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=textBoxTestName, Path=Text}"
                                                 Value="{x:Null}">
                                        <Setter Property="IsEnabled"
                                                Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding TestConnection.TestState}"
                                                 Value="1">
                                        <Setter Property="IsEnabled"
                                                Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding TestConnection.TestState}"
                                                 Value="2">
                                        <Setter Property="IsEnabled"
                                                Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding TestConnection.TestState}"
                                                 Value="3">
                                        <Setter Property="IsEnabled"
                                                Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
                <StackPanel Grid.Row="3"
                            Margin="0 10 0 0">
                    <Button Content="Stop test"
                            Height="30"
                            Command="{Binding StopTestButton}">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="IsEnabled"
                                        Value="False" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding TestConnection.TestState}"
                                                 Value="1">
                                        <Setter Property="IsEnabled"
                                                Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
                <StackPanel Grid.Row="4"
                            Margin="0 10 0 0">
                    <Button Content="Clear Test"
                            Height="30"
                            Command="{Binding ClearButton}">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="IsEnabled"
                                        Value="False" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding TestConnection.TestState}"
                                                 Value="2">
                                        <Setter Property="IsEnabled"
                                                Value="True" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding TestConnection.TestState}"
                                                 Value="3">
                                        <Setter Property="IsEnabled"
                                                Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
                <StackPanel Grid.Row="5"
                            Margin="0 10 0 0">
                    <Button Content="Export results"
                            Height="30"
                            Command="{Binding ExportButton}">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="IsEnabled"
                                        Value="False" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding TestConnection.TestState}"
                                                 Value="2">
                                        <Setter Property="IsEnabled"
                                                Value="True" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding TestConnection.TestState}"
                                                 Value="3">
                                        <Setter Property="IsEnabled"
                                                Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
                <Grid Grid.Row="6">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding TestConnection.TestState}"
                                                   Value="1" />
                                        <Condition Binding="{Binding ElementName=radioButtonManual, Path=IsChecked}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Button Content="{Binding TestConnection.TestButtonContent}"
                            Style="{StaticResource ResourceKey=RoundButton}"
                            Command="{Binding TestPinButton}"
                            CommandParameter="{Binding TestConnection.SelectedPin}" />
                </Grid>
            </Grid>
        </Grid>
    </Grid>

</Window>
